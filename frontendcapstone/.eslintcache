[{"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\index.js":"1","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\Capstone.js":"2","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\nav\\NavBar.js":"3","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\auth\\Login.js":"5","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\auth\\Register.js":"6","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongProvider.js":"7","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongList.js":"8","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\Song.js":"9","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongForm.js":"10","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongDetails.js":"11"},{"size":893,"mtime":1612197361350,"results":"12","hashOfConfig":"13"},{"size":770,"mtime":1612294612964,"results":"14","hashOfConfig":"13"},{"size":635,"mtime":1612294612967,"results":"15","hashOfConfig":"13"},{"size":798,"mtime":1612302774642,"results":"16","hashOfConfig":"13"},{"size":2221,"mtime":1612294612966,"results":"17","hashOfConfig":"13"},{"size":3199,"mtime":1612294612966,"results":"18","hashOfConfig":"13"},{"size":1751,"mtime":1612298346370,"results":"19","hashOfConfig":"13"},{"size":773,"mtime":1612294612969,"results":"20","hashOfConfig":"13"},{"size":510,"mtime":1612298618619,"results":"21","hashOfConfig":"13"},{"size":6038,"mtime":1612302596188,"results":"22","hashOfConfig":"13"},{"size":1359,"mtime":1612298593539,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1inr7gh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\index.js",[],["50","51"],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\Capstone.js",[],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\auth\\Login.js",["52"],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\auth\\Register.js",["53"],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongProvider.js",[],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongList.js",["54"],"import React, { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { SongContext } from \"./SongProvider\"\r\nimport { Song } from \"./Song\"\r\nimport \"./Song.css\"\r\n\r\nexport const SongList = () => {\r\n  const { songs, getSongs } = useContext(SongContext)\r\n\r\n  useEffect(() => {\r\n    console.log(\"SongList: useEffect - getSongs\")\r\n    getSongs()\r\n\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div className=\"songs\">\r\n      {console.log(\"SongList: Render\", songs)}\r\n      <h2>Songs</h2>\r\n      <button onClick={() => {history.push(\"/songs/create\")}}>\r\n        Add A Song\r\n      </button>\r\n      {\r\n        songs.map(song => {\r\n          return <Song key={song.id} song={song} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\Song.js",[],"C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongForm.js",["55"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { SongContext } from \"./SongProvider\"\r\nimport \"./Song.css\"\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nexport const SongForm = () => {\r\n    const { addSong, getSongs, updateSong, getSongById } = useContext(SongContext)\r\n\r\n    const [song, setSong] = useState({\r\n      title: \"\",\r\n      feel: \"\",\r\n      lyricSummary: \"\",\r\n      startDate: \"\",\r\n      completionDateGoal: \"\",\r\n      progress: \"\",\r\n      productionGoals: \"\",\r\n      cowriters: \"\"\r\n    });\r\n\r\n    \r\n    const {songId} = useParams()\r\n    const history = useHistory();\r\n\r\n \r\n    const handleControlledInputChange = (event) => {\r\n\r\n      const newSong = { ...song }\r\n      let selectedVal = event.target.value\r\n    \r\n      if (event.target.id.includes(\"Id\")) {\r\n        selectedVal = parseInt(selectedVal)\r\n      }\r\n      newSong[event.target.id] = selectedVal\r\n      setSong(newSong)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSongs().then(() => {\r\n            if (songId) {\r\n                getSongById(songId)\r\n                .then(song => {\r\n                    setSong(song)\r\n                })\r\n            }\r\n        })\r\n      }, [])\r\n\r\n    const handleSaveSong = (event) => {\r\n      \r\n\r\n      if (song.title === \"\" || song.feel === \"\" || song.lyricSummary === \"\" || song.startDate === \"\" || song.completionDateGoal === \"\" || song.progress === \"\" || song.productionGoals === \"\" || song.cowriters === \"\") {\r\n        window.alert(\"Please add details of song\")\r\n      } else {\r\n          if (songId) {\r\n              updateSong({\r\n                  id: song.id,\r\n                  title: song.title,\r\n                  feel: song.feel,\r\n                  lyricSummary: song.lyricSummary,\r\n                  startDate: song.startDate,\r\n                  completionDateGoal: song.completionDateGoal,\r\n                  progress: song.progress,\r\n                  productionGoals: song.productionGoals,\r\n                  cowriters: song.cowriters\r\n              })\r\n              .then(() => history.push(`/songs/detail/${song.id}`))\r\n          } else {\r\n              addSong({\r\n                title: song.title,\r\n                feel: song.feel,\r\n                lyricSummary: song.lyricSummary,\r\n                startDate: song.startDate,\r\n                completionDateGoal: song.completionDateGoal,\r\n                progress: song.progress,\r\n                productionGoals: song.productionGoals,\r\n                cowriters: song.cowriters\r\n              })\r\n              .then(() => history.push(\"/songs\"))\r\n          }\r\n\r\n       \r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <form className=\"songForm\">\r\n          <h2 className=\"songForm__title\">{songId ? \"Edit Song\" : \"Add A Song\"}</h2>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Song Title:</label>\r\n                  <input type=\"text\" id=\"title\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Song Title\" value={song.title}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"feel\">Feel:</label>\r\n                  <textarea id=\"feel\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Describe feel of song\" value={song.feel}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"lyricSummary\">Lyric Summary:</label>\r\n                  <textarea id=\"lyricSummary\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Describe lyrical content\" value={song.lyricSummary}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"startDate\">Start Date:</label>\r\n                  <input type=\"text\" id=\"startDate\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Date song was started\" value={song.startDate}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"completionDateGoal\">Completion Date Goal:</label>\r\n                  <input type=\"text\" id=\"completionDateGoal\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Ideal completion date\" value={song.completionDateGoal}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"progress\">Progress:</label>\r\n                  <textarea id=\"progress\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Describe progress of song\" value={song.progress}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"productionGoals\">Production Goals:</label>\r\n                  <textarea id=\"productionGoals\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Describe any goals for demo production\" value={song.productionGoals}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"cowriters\">Co-writers:</label>\r\n                  <input type=\"text\" id=\"cowriters\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"List any co-writers\" value={song.cowriters}/>\r\n              </div>\r\n          </fieldset>\r\n            <button className=\"btn btn-primary\"\r\n                onClick={event => {\r\n                    event.preventDefault()\r\n                    handleSaveSong()\r\n                }}>\r\n                {songId ? \"Save Song\" : \"Add Song\"}\r\n            </button>\r\n      </form>\r\n    )\r\n}","C:\\Users\\Iman\\workspace\\frontendcapstone\\frontendcapstone\\src\\components\\songs\\SongDetails.js",["56"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { SongContext } from \"./SongProvider\"\r\nimport \"./Song.css\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\nexport const SongDetails = () => {\r\n  const { getSongById } = useContext(SongContext)\r\n\r\n\tconst [song, setSong] = useState({})\r\n\r\n\tconst {songId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", songId)\r\n    getSongById(songId)\r\n    .then((response) => {\r\n      setSong(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"song\">\r\n        <h3 className=\"song__title\">Title: {song.title}</h3>\r\n        <div className=\"song__feel\">Feel: {song.feel}</div>\r\n        <div className=\"song__lyricSummary\">Lyric Summary: {song.lyricSummary}</div>\r\n        <div className=\"song__startDate\">Start Date: {song.startDate}</div>\r\n        <div className=\"song__completionDateGoal\">Completion Date Goal: {song.completionDateGoal}</div>\r\n        <div className=\"song__progress\">Progress: {song.progress}</div>\r\n        <div className=\"song__productionGoals\">Production Goals: {song.productionGoals}</div>\r\n        <div className=\"song__cowriters\">Co-writers: {song.cowriters}</div>\r\n        <button onClick={() => {\r\n            history.push(`/songs/edit/${song.id}`)}}>Edit\r\n        </button>\r\n    </section>\r\n  )\r\n}",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":11,"nodeType":"63","messageId":"64","endLine":9,"endColumn":19},{"ruleId":"61","severity":1,"message":"65","line":9,"column":11,"nodeType":"63","messageId":"64","endLine":9,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":14,"column":6,"nodeType":"68","endLine":14,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":46,"column":10,"nodeType":"68","endLine":46,"endColumn":12,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":20,"column":8,"nodeType":"68","endLine":20,"endColumn":10,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'verifyPassword' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSongs'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'getSongById', 'getSongs', and 'songId'. Either include them or remove the dependency array.",["77"],"React Hook useEffect has missing dependencies: 'getSongById' and 'songId'. Either include them or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [getSongs]",{"range":"85","text":"86"},"Update the dependencies array to be: [getSongById, getSongs, songId]",{"range":"87","text":"88"},"Update the dependencies array to be: [getSongById, songId]",{"range":"89","text":"90"},[386,388],"[getSongs]",[1188,1190],"[getSongById, getSongs, songId]",[538,540],"[getSongById, songId]"]